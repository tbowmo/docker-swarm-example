version: '3.3'

services:
  portainer:
    image: portainer/portainer
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
      replicas: 1
      labels:
        - traefik.enable=true
        - "traefik.http.routers.portainer.rule=Host(`portainer.${BASE_HOST}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls.certresolver=le"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.services.portainer.loadbalancer.server.scheme=http"

        # - traefik.enable=true
        # - traefik.docker.network=traefik-public
        # - traefik.redirectorservice.frontend.entryPoints=http
        # - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # - traefik.frontend.rule=Host:portainer.${BASE_HOST}
        # - traefik.webservice.frontend.entryPoints=https
        # - traefik.port=9000
        # - traefik.tags=traefik-public
    networks:
      - traefik-public
      - portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/portainer:/data

  agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes

    networks:
      - portainer_agent
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

networks:
  portainer_agent:
    driver: overlay
    attachable: true
  traefik-public:
    external: true
